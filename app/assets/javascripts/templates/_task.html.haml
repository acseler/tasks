.each-task{ ng: { init: 'deadlineEdit = false',
                  mouseenter: 'task_hover = true',
                  mouseleave: 'task_hover = deadlineEdit' } }
  .col-xs-1
    %input{ type: 'checkbox', name: 'completed',
              ng: { model: 'task.completed', click: 'updateTask(task)' } }
  .col-xs-8
    %p{ ng: { hide: 'taskEditFlag' } }
      {{task.title}}
      %span.deadline
        {{task.deadline | date:'yyyy-MM-dd'}}
    %form{ ng: { submit: 'updateTaskTitle(task)', show: 'taskEditFlag' },
             role: 'form', id: 'update_task_title' }
      .input-group-sm
        %input.input-sm{ type: 'text', class: 'form-control', name: 'task_title',
                           ng: { model: 'taskTitleEdit' } }
        .input-group-btn
          %button{ role: 'submit', class: 'btn btn-sm btn-primary' }
            {{ 'save' | translate }}
  .col-xs-3
    .task-buttons{ ng: { show: 'task_hover' } }
      %span.glyphicon.glyphicon-pencil{ ng: { click: 'showTaskEdit()' } }
      %span{ role: 'button',  data: { toggle: 'dropdown'},
             class: 'dropdown-toggle glyphicon glyphicon-calendar',
             ng: { click: 'deadlineEdit = !deadlineEdit' } }
      %ul.dropdown-menu
        %datetimepicker{ ng: { model: 'task.deadline' },
                         'datetimepicker-neutral-timezone': true,
                         datetimepicker: { config: "{dropdownSelector: '.dropdown-toggle', minView: 'day'}" },
                         'on-set-time': 'assignDeadline()' }
      %span.glyphicon.glyphicon-trash{ ng: { click: 'deleteTask(task)' } }
